{
	// Place your snippets for cpp here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
		"cpp class methods": {
			"prefix": "cpp_class_methods",
			"body": [
				"#include \"ClassName$0.hpp\"",
				"",
				"ClassName::ClassName(void) {",
				"\treturn ;",
				"}",
				"",
				"ClassName::ClassName(ClassName const &src) {",
				"\treturn ;",
				"}",
				"",
				"ClassName::~ClassName(void) {",
				"\treturn ;",
				"}",
				"",
				"ClassName\t&ClassName::operator=(ClassName const &src) {",
				"",
				"}",
				""
				]
		},
		"main cpp": {
			"prefix": "main_cpp",
			"body": [
				"int\tmain(void)",
				"{",
				"\t$0",
				"\treturn 0;",
				"}"
			]
		},
		"print to cout": {
			"prefix": "print_cout",
			"body": "std::cout << $0 << std::endl;"
		}
		
	}