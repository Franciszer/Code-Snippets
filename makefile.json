{
	// Place your snippets for makefile here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	// "Print to console": {
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
"Makefile Model": {
	"prefix": "makeModel",
	"body": [
		"# ___COMPILATION___",
		"",
		"CPP= c++",
		"FLAGS= -Wall -Wextra -Werror",
		"SRCS=\tmain.cpp",
		"",
		"NAME= $0",
		"OBJS= $ {SRCS:.cpp=.o}",
		"INCLUDE_DIRS = -I .",
		"",
		"",
		".cpp.o:",
		"\t@printf \"$ {LIGHT_BLUE}=>\t\"",
		"\t$ {CPP} $ {FLAGS} $ {INCLUDE_DIRS} -c $ < -o $ {<:.cpp=.o}",
		"\t@printf \"$ {NC}\"",
		"",
		"# ___COLORS___",
		"",
		"GREEN=\\033[0;32m",
		"LIGHT_BLUE=\\033[0;34m",
		"RED=\\033[0;31m",
		"YELLOW=\\033[0;33m",
		"NC=\\033[0m",
		"",
		"all: $ {NAME}",
		"",
		"$ {NAME}: $ {OBJS}",
		"\t@printf \"$ {YELLOW}=>\t\"",
		"\t$ {CPP} $ {FLAGS} $ {INCLUDE_DIRS} $ {OBJS} -o $ {NAME}",
		"\t@echo \"$ {GREEN}✓ $ {NAME} compiled$ {NC}\"",
		"",
		"start: all",
		"\t@./$ {NAME}",
		"",
		"valgrind_start: all",
		"\t@valgrind --leak-check=full --show-leak-kinds=definite ./$ {NAME}",
		"",
		"clean:",
		"\t@printf \"$ {RED}X \"",
		"\trm -rf $ {OBJS}",
		"\t@printf \"$ {NC}\"",
		"\t@echo \"$ {GREEN}✓ $ {NAME} clean$ {NC}\"",
		"",
		"fclean: clean",
		"\t@printf \"$ {RED}X \"",
		"\trm -rf $ {NAME}",
		"\t@printf \"$ {NC}\"",
		"",
		"re: fclean all",
		"",
		".PHONY: all clean fclean re start",
		"\n"]
	}
}
